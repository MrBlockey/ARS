{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar prop_types_1 = require(\"prop-types\");\nvar react_1 = __importStar(require(\"react\"));\nvar isType_1 = require(\"../___utils/isType\");\nvar uiFunctions_1 = require(\"./uiFunctions\");\nfunction ScrollToTopButton(props) {\n  var anchor = (0, react_1.createRef)();\n  var button = props.button,\n    position = props.position,\n    padding = props.padding,\n    offset = props.offset,\n    scrollingContainer = props.scrollingContainer;\n  var btn = (0, isType_1.isFunction)(button) ? button() : button;\n  var _a = (0, react_1.useState)(false),\n    mounted = _a[0],\n    setMounted = _a[1];\n  (0, react_1.useEffect)(function () {\n    var buttonElement = anchor.current.nextElementSibling;\n    var container = anchor.current.parentNode;\n    var scrollContainer = scrollingContainer.current;\n    var positionBtn = (0, uiFunctions_1.btnPosition)(scrollContainer, buttonElement);\n    var pos = position.split(\" \");\n    var updateBtnPosition = function () {\n      return positionBtn(pos[0], pos[1], padding, offset);\n    };\n    window.addEventListener(\"resize\", updateBtnPosition);\n    scrollContainer.addEventListener(\"scroll\", updateBtnPosition);\n    buttonElement.addEventListener(\"click\", function () {\n      scrollContainer.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n      });\n    });\n    setTimeout(function () {\n      return updateBtnPosition();\n    }, 250);\n    setMounted(true);\n    return function () {\n      container.style.removeProperty(\"overflow\");\n      container.style.removeProperty(\"position\");\n      container.style.removeProperty(\"padding\");\n      window.removeEventListener(\"resize\", updateBtnPosition);\n    };\n  }, []);\n  return react_1.default.createElement(react_1.default.Fragment, null, !mounted && react_1.default.createElement(\"span\", {\n    ref: anchor,\n    style: {\n      display: \"none\"\n    }\n  }), button ? btn : react_1.default.createElement(\"button\", {\n    type: \"button\"\n  }, \"To Top\"));\n}\nScrollToTopButton.propTypes = {\n  scrollingContainer: (0, prop_types_1.shape)({\n    current: (0, prop_types_1.oneOf)([prop_types_1.element, prop_types_1.node])\n  }).isRequired,\n  button: (0, prop_types_1.oneOfType)([prop_types_1.node, prop_types_1.element, prop_types_1.func]),\n  position: (0, prop_types_1.oneOf)([\"top right\", \"top left\", \"bottom right\", \"bottom left\"]),\n  padding: prop_types_1.number,\n  offset: prop_types_1.number\n};\nScrollToTopButton.defaultProps = {\n  button: null,\n  padding: 20,\n  offset: 50,\n  position: \"bottom right\"\n};\nexports.default = ScrollToTopButton;","map":{"version":3,"mappings":"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","names":["ScrollToTopButton","props","anchor","position","padding","offset","scrollingContainer","btn","button","mounted","setMounted","buttonElement","current","nextElementSibling","container","parentNode","scrollContainer","positionBtn","pos","split","updateBtnPosition","window","addEventListener","scrollTo","top","behavior","setTimeout","style","removeProperty","removeEventListener","react_1","ref","display","type","propTypes","prop_types_1","isRequired","defaultProps","exports"],"sources":["../../src/___subComponents/ScrollToTopButton.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}